/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        ht_tp: ht_tp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <25 26 27 28 31 32 33 34>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC     &kp N1               &kp N2          &kp N3             &kp N4         &kp N5                                 &kp N6       &kp N7         &kp N8         &kp N9          &kp N0             &none
&kp TAB     &kp Q                &kp W           &kp E              &kp R          &kp T                                  &kp Y        &kp U          &kp I          &kp O           &kp P              &kp MINUS
&kp LSHFT   &ht_tp LEFT_SHIFT A  &ht_tp LCTRL S  &ht_tp LEFT_ALT D  &ht_tp LGUI F  &kp G                                  &kp H        &ht_tp RGUI J  &ht_tp RALT K  &ht_tp RCTRL L  &ht_tp RSHFT SEMI  &kp BACKSLASH
&kp DELETE  &kp Z                &kp X           &kp C              &kp V          &kp B        &kp TAB        &kp DEL    &kp N        &kp M          &kp COMMA      &kp DOT         &kp FSLH           &kp SQT
                                                 &kp LC(SPACE)      &kp LC(Z)      &lt 2 SPACE  &kp BACKSPACE  &kp ENTER  &lt 1 SPACE  &kp BSPC       &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp F1           &kp F2       &kp F3      &kp F4                &kp F5                 &kp F6                     &kp F7          &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&kp PRINTSCREEN  &kp EXCL     &kp AT      &kp LBKT              &kp RBKT               &kp PIPE                   &kp KP_NUMLOCK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &kp KP_DIVIDE
&trans           &kp HASH     &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                  &kp UNDER       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS     &kp TILDE
&trans           &kp PERCENT  &kp CARET   &kp LBRC              &kp RBRC               &kp TILDE  &trans  &trans  &kp AMPERSAND   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MULTIPLY  &kp PIPE
                                          &trans                &trans                 &trans     &trans  &trans  &trans          &trans           &kp KP_NUMBER_0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &trans             &bootloader                  &trans  &trans           &trans               &trans     &trans  &trans
&out OUT_BLE    &trans        &trans        &kp LT            &kp GT             &trans                       &trans  &trans           &kp UP               &trans     &trans  &trans
&out OUT_TOG    &kp EQUAL     &kp COLON     &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &trans                       &trans  &kp LEFT         &kp DOWN             &kp RIGHT  &trans  &trans
&trans          &trans        &trans        &kp HOME          &kp END            &trans       &to 3   &trans  &trans  &kp LC(LS(F10))  &kp LS(LA(LC(F10)))  &trans     &trans  &trans
                                            &trans            &trans             &trans       &trans  &trans  &trans  &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3         &kp N4     &kp N5                        &kp N6     &kp N7    &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E          &kp R      &kp T                         &kp Y      &kp U     &kp I      &kp O    &kp P     &kp BSLH
&kp LSHFT  &kp A   &kp S   &kp D          &kp F      &kp G                         &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp DEL    &kp Z   &kp X   &kp C          &kp V      &kp B      &to 0     &kp DEL  &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LC(SPACE)  &kp LC(Z)  &kp SPACE  &kp BSPC  &kp RET  &kp SPACE  &kp BSPC  &kp LGUI
            >;
        };
    };
};
